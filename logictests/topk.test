# Generated by:
#     target/debug/noria-logictest generate --operations topk --compare-to mysql://root@localhost/mysql --subquery-depth 1 --rows-per-table 5 -o logictests/generated/topk.test --include-deletes
# failure: ENG-337

statement ok
CREATE TABLE table_1 (column_1 INT(32), column_2 INT(32), PRIMARY KEY (column_2))


statement ok
INSERT INTO table_1 (column_1, column_2) VALUES (1, 2), (1, 3), (1, 4), (1, 5), (1, 6)


query  nosort
SELECT table_1.column_1 AS alias_1 FROM table_1 ORDER BY table_1.column_1 ASC LIMIT ?
? = 3
----
1
1
1

query  nosort
SELECT table_1.column_1 AS alias_1 FROM table_1 ORDER BY table_1.column_1 DESC LIMIT ?
? = 2
----
1
1

query  nosort
SELECT table_1.column_1 AS alias_1 FROM table_1 ORDER BY table_1.column_1 DESC LIMIT 10
----
1
1
1
1
1

statement ok
DELETE FROM table_1 WHERE (column_2 = 2)


statement ok
DELETE FROM table_1 WHERE (column_2 = 3)


query  nosort
SELECT table_1.column_1 AS alias_1 FROM table_1 ORDER BY table_1.column_1 ASC LIMIT 10
----
1
1
1

query  nosort
SELECT table_1.column_1 AS alias_1 FROM table_1 ORDER BY table_1.column_1 DESC LIMIT 10
----
1
1
1

query  nosort
SELECT table_1.column_1 AS alias_1 FROM table_1 ORDER BY table_1.column_1 DESC LIMIT 10
----
1
1
1


query  nosort
SELECT table_1.column_2 AS alias_1 FROM table_1
ORDER BY
  CASE WHEN table_1.column_2 = 5
  THEN table_1.column_1
  ELSE table_1.column_2
  END
ASC
LIMIT 2
----
5
4

# test expressions in order by clause
query I nosort
select column_2 from table_1 order by column_2 + 1 limit 3
----
4
5
6

# test aliases in order by clause
query I nosort
select column_2 + 1 as alias from table_1 order by alias limit 3
----
5
6
7

# test aliased aggreagates in order by clause
query I nosort
select count(*) as total from table_1 group by column_1 order by total limit 3
----
3

statement ok
INSERT INTO table_1 (column_1, column_2) VALUES (2, 7), (2, 8), (2, 9), (2, 10), (2, 11);

query I nosort
select min(column_2) as minimum from table_1 group by column_1 order by minimum desc limit 3
----
7
4

query I nosort
select count(column_2) as total from table_1 group by column_1 order by total desc limit 3
----
5
3
